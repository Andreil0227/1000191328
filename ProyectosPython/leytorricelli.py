# -*- coding: utf-8 -*-
"""LeyTorricelli.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Yg__lkTSYFb-5s_B5mJZQnHTUftsark
"""

#Código para la relación de caida de fluidos con la ley de torricelli

import matplotlib.pyplot as plt
import numpy as np

# Datos de los orificios
orificios = [
    {"nombre": "Orificio A", "area_cm2": 0.314, "tiempo_min": 20.7, "color": "#3498db", "caudal": "0.5 L/min"},
    {"nombre": "Orificio B", "area_cm2": 1.26, "tiempo_min": 5.1, "color": "#e74c3c", "caudal": "2.1 L/min"},
    {"nombre": "Orificio C", "area_cm2": 0.8, "tiempo_min": 20.45, "color": "#2ecc71", "caudal": "0.52 L/min"}
]

# Configuración del gráfico
fig, ax = plt.subplots(figsize=(8, 10))
fig.patch.set_facecolor('white')

# Dibujar cilindros proporcionales
for i, orif in enumerate(orificios):
    # Cilindro (área proporcional)
    cylinder = plt.Rectangle((i*3 + 0.5, 0),
                            width=1,
                            height=orif["area_cm2"]*8,  # Factor de escala
                            color=orif["color"],
                            alpha=0.7,
                            edgecolor='black',
                            linewidth=1.5)
    ax.add_patch(cylinder)

    # Línea de tiempo
    ax.plot([i*3 + 1, i*3 + 1],
            [orif["area_cm2"]*8 + 0.5, orif["area_cm2"]*8 + 0.5 + orif["tiempo_min"]/3],
            color='black',
            linestyle='--',
            linewidth=1.5)

    # Etiqueta de tiempo
    ax.text(i*3 + 1.2, orif["area_cm2"]*8 + 0.5 + orif["tiempo_min"]/6,
            f"{orif['tiempo_min']} min",
            va='center',
            fontsize=11)

    # Etiqueta inferior
    ax.text(i*3 + 1, -2,
            f"{orif['nombre']}\n"
            f"Área: {orif['area_cm2']} cm²\n"
            f"Caudal: {orif['caudal']}",
            ha='center',
            va='top',
            fontsize=11,
            bbox=dict(facecolor='white', alpha=0.8, edgecolor='gray', boxstyle='round'))

# Configuración estética
ax.set_title("Relación Área-Tiempo en la Ley de Torricelli\n"
             "(Mayor área → Menor tiempo de vaciado)",
             pad=20, fontsize=14, fontweight='bold')

ax.set_xlim(0, 9)
ax.set_ylim(-3, 30)  # Ajustar según necesidad
ax.axis('off')

# Flecha explicativa
ax.annotate('', xy=(4.5, 15), xytext=(4.5, 25),
            arrowprops=dict(arrowstyle="<-", color='black', lw=2))
ax.text(4.5, 20, 'Tiempo de vaciado', ha='center', va='center', backgroundcolor='white')

# Escala de referencia
ax.text(-0.5, 0, 'Área relativa:', ha='right', va='center')
for val in [0.5, 1.0, 1.5]:
    plt.Rectangle((-0.3, val*8 - 0.1), 0.2, 0.2, color='gray')
    ax.text(-0.1, val*8, f'{val} cm²', ha='left', va='center')

plt.tight_layout()
plt.savefig('torricelli_grafico_vertical.png', dpi=300, bbox_inches='tight')
plt.show()